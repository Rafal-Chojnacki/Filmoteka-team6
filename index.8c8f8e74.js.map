{"mappings":"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","sources":["src/js/header.js","src/js/moviesGallery.js","src/js/choose.js","src/js/pagination.js"],"sourcesContent":["const searchForm = document.getElementById('search-form');\nconst searchInput = document.querySelector('.input');\nconst gallery = document.getElementById('gallery');\nconst loader = document.getElementById('loader');\nconst notitle = document.querySelector('.notitle');\nconst API_KEY = 'e7c806d7ce9bbdf1ef93bebcabbfe0f1';\nlet genreMap = {};\n\n\n\nhideLoader();\n\nasync function fetchGenres() {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`);\n    const data = await response.json();\n    const genres = data.genres;\n\n    for (const genre of genres) {\n      genreMap[genre.id] = genre.name;\n    }\n  } catch (error) {\n    console.log(error.toString());\n  }\n}\n\nasync function searchMovies(query, page = 1, perPage = 20){\n  try {\n    \n    gallery.innerHTML=\"\"\n    showLoader(); \n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=${page}`);\n    const data = await response.json();\n    const movies = data.results.slice(0,perPage);\n    hideLoader(); \n    renderGallery(movies);\n\n    if (movies.length === 0) {\n      hideLoader();\n      showNoTitleMessage();\n      gallery.innerHTML ='<p class=\"myfriend\"></p>'\n    } else {\n      hideNoTitleMessage();\n    }\n  } catch (error) {\n    console.log(error.toString());\n    hideLoader(); \n    showNoTitleMessage();\n  }\n}\n\n\n\nfunction renderGallery(movies) {\n  gallery.innerHTML = '';\nconst markup = movies.map(movie =>{ \n  const { id, poster_path, title, release_date, genre_ids } = movie;\n\n  if (!release_date || !poster_path || genre_ids.length === 0) {\n    return ''; \n  }\n\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const productionYear = new Date(release_date).getFullYear();\n  const genresFormatted = genre_ids\n  .map(genreId => genreMap[genreId])\n  .slice(0, 2)\n  .join(', ');\n\n  return `\n  <a class=\"gallery__link\">\n  <div class=\"gallery__item\" id=\"${id}\">\n    <img class=\"gallery__item-img\" src=\"${posterUrl}\" loading=\"lazy\" />\n    <h4 class=\"gallery__item-header\">${title}</h4>\n    <span class=\"gallery__item-info\">${genresFormatted}</span>\n    <span class=\"gallery__item-info\">${productionYear}</span>\n  </div>\n</a>\n  `;\n}).join(\"\")\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction showLoader() {\n  loader.style.display = 'flex';\n}\n\nfunction hideLoader() {\n  loader.style.display = 'none';\n}\n\nfunction showNoTitleMessage() {\n  notitle.innerText = 'Search result not successful. Enter the correct movie name.';\n  notitle.style.display = 'block';\n}\n\nfunction hideNoTitleMessage() {\n  notitle.style.display = 'none';\n}\n\nsearchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const query = searchInput.value;\n  searchMovies(query);\n  searchInput.value = '';\n});\n\n  fetchGenres();\n\n\nexport {showNoTitleMessage};\nexport {showLoader};\nexport {hideLoader};\nexport {fetchGenres};\nexport {renderGallery};\nexport {hideNoTitleMessage};\nexport {searchMovies};","'use strict';\nconst API_KEY = 'e7c806d7ce9bbdf1ef93bebcabbfe0f1';\nconst gallery = document.querySelector('.gallery');\nfunction moviesGallery(movies, genres) {\n  gallery.innerHTML = '';\n  const markup = movies\n    .sort((firstMovie, secondMovie) => secondMovie.popularity - firstMovie.popularity)\n    .map(movie => {\n      const { poster_path, id, title, release_date, genre_ids } = movie;\n      const year = new Date(release_date).getFullYear();\n      const movieGenres = genres\n        .filter(genre => genre_ids.includes(genre.id))\n        .map(genre => genre.name)\n        .join(', ');\n      return `\n <a class=\"gallery__link\">\n <div class=\"gallery__item\" id=\"${id}\">\n <img class=\"gallery__item-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"/>\n <h4 class=\"gallery__item-header\">${title}</h4>\n <span class=\"gallery__item-info\">${movieGenres}</span>\n <span class=\"gallery__item-info\">${year}</span>\n </div>\n </a>\n `;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('afterbegin', markup);\n}\nexport async function fetchMovies(pageNum) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&page=${pageNum}`,\n    );\n    const data = await response.json();\n    const genres = await fetchGenre();\n    moviesGallery(data.results, genres);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nfetchMovies();\nasync function fetchGenre() {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`,\n    );\n    const data = await response.json();\n    const genres = data.genres;\n    return genres;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst btnUp = document.querySelector('.btnUp');\nbtnUp.style.display = 'none';\nwindow.onscroll = function () {\n  scrollFunction();\n};\nfunction scrollFunction() {\n  if (document.documentElement.scrollTop > 200) {\n    btnUp.style.display = 'block';\n  } else {\n    btnUp.style.display = 'none';\n  }\n  btnUp.addEventListener('click', scrollToTop);\n}\nfunction scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n","import { showLoader } from \"./header\";\nimport { hideLoader } from \"./header\";\nimport { hideNoTitleMessage } from \"./header\";\n\n\n\nasync function fetchGenre() {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`,\n    );\n    const data = await response.json();\n    const genres = data.genres;\n    return genres;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nconst gallery = document.querySelector('.gallery');\n\nconst genreSelect = document.querySelector('.genre');\n\nconst API_KEY = '6fc014c055bacb8460b83603c43b9093'\n\nlet genre = '';\n\ngenreSelect.addEventListener('change', handleGenreChange);\n\nfunction handleGenreChange(event) {\n  gallery.innerHTML='';\nhideNoTitleMessage();\ngenre = event.target.value;\nfetchMoviesByGenre(genre);\n// console.log(selectedGenre);\n}\n\nasync function fetchMoviesByGenre(number) {\n  function getGenreId(genre) {\n    const genreMap = {\n      Action: 28,\n      Adventure: 12,\n      Animation: 16,\n      Comedy: 35,\n      Crime: 80,\n      Documentary: 99,\n      Drama: 18,\n      Family: 10751,\n      Fantasy: 14,\n      History: 36,\n      Horror: 27,\n      Music: 10402,\n      Mystery: 9648,\n      Romance: 10749,\n      'Science Fiction': 878,\n      'TV Movie': 10770,\n      Thriller: 53,\n      War: 10752,\n      Western: 37\n    };\n    return genreMap[genre];\n  }\n  try {\n    showLoader();\n    const genreId = getGenreId(genre);\n    const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=${genreId}&page=${number}`);\n    const data = await response.json();\n    const genres = await fetchGenre();\n    const slajs = data.results.slice(0,20);\n    moviesGallery(slajs, genres);\n    hideLoader()\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction getGenreId(genre) {\n  const genreMap = {\n    Action: 28,\n    Adventure: 12,\n    Animation: 16,\n    Comedy: 35,\n    Crime: 80,\n    Documentary: 99,\n    Drama: 18,\n    Family: 10751,\n    Fantasy: 14,\n    History: 36,\n    Horror: 27,\n    Music: 10402,\n    Mystery: 9648,\n    Romance: 10749,\n    'Science Fiction': 878,\n    'TV Movie': 10770,\n    Thriller: 53,\n    War: 10752,\n    Western: 37\n  };\n  return genreMap[genre];\n}\n\nlet currentPage = 1;\nconst moviesPerPage = 20;\n\nfunction moviesGallery(movies, genres) {\n\n  const markup = movies\n  .sort((firstMovie, secondMovie) => secondMovie.popularity - firstMovie.popularity)\n  .map(movie => {\n    const { poster_path, id, title, release_date, genre_ids } = movie;\n    const year = new Date(release_date).getFullYear();\n\n    const movieGenres = genres\n      .filter(genre => genre_ids.includes(genre.id))\n      .map(genre => genre.name)\n      .join(', ');\n\n    return `\n        <a class=\"gallery__link\">\n          <div class=\"gallery__item\" id=\"${id}\">\n            <img class=\"gallery__item-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"/>\n            <h4 class=\"gallery__item-header\">${title}</h4>\n            <span class=\"gallery__item-info\">${movieGenres}</span>\n            \n            <span class=\"gallery__item-info\">${year}</span>\n            \n          </div>\n        </a>\n      `;\n  })\n  .join('');\n\ngallery.insertAdjacentHTML('afterbegin', markup);\n\n\n}\n\nexport {fetchMoviesByGenre , handleGenreChange};","'use strict';\r\n\r\nimport { fetchMovies } from './moviesGallery.js';\r\nimport { fetchMoviesByGenre } from './choose.js';\r\nimport { searchMovies } from './header.js';\r\nconst searchInput = document.querySelector('.input');\r\nlet query = searchInput.value;\r\nconst gallery = document.querySelector('.gallery')\r\n// const API_KEY = 'e7c806d7ce9bbdf1ef93bebcabbfe0f1';\r\nconst genreSelect = document.querySelector('.genre')\r\n// Selecting DOM elements\r\nconst prevBtn = document.getElementById('prevBtn'),\r\n  nextBtn = document.getElementById('nextBtn'),\r\n  // prevNext = document.querySelectorAll('.prevNext'),\r\n  numbers = document.querySelectorAll('.link');\r\n// Setting an initial step\r\nlet currentStep = 1;\r\n// Function to update the button states\r\n\r\nconst dots = document.querySelectorAll('.dots');\r\n\r\nconst updateBtnBehaviour = () => {\r\n  // If we are at the last step\r\n  if (currentStep == 20) {\r\n    nextBtn.disabled = true;\r\n    prevBtn.disabled = false;\r\n  } else if (currentStep == 1) {\r\n    nextBtn.disabled = false;\r\n    prevBtn.disabled = true;\r\n    // prevNext[0].disabled = true;\r\n  } else {\r\n    prevBtn.disabled = false;\r\n    // prevNext[1].disabled = false;\r\n    nextBtn.disabled = false;\r\n    // prevNext[0].disabled = false;\r\n  }\r\n};\r\n\r\n// Add event listeners to the number links\r\n\r\nnumbers.forEach((number, numIndex) => {\r\n  number.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    // Set the current step to the clicked number link\r\n\r\n    currentStep = numIndex + 1;\r\n    // console.log(currentStep);\r\n    // Remove the \"active\" class from the previously active number link\r\n    document.querySelector('.active').classList.remove('active');\r\n    // Add the \"active\" class to the clicked number link\r\n    number.classList.add('active');\r\n    if (genreSelect.value !== 'Choose genre') {\r\n      gallery.innerHTML='';\r\n      fetchMoviesByGenre(currentStep);\r\n    } \r\n    else if (searchInput.value.length !== 0 ){\r\n      gallery.innerHTML='';\r\n      searchMovies(query , currentStep)\r\n        } else {\r\n      gallery.innerHTML='';\r\n      fetchMovies(currentStep);\r\n    }\r\n    updateBtnBehaviour(); // Update the button states\r\n    disappearingBtns();\r\n  });\r\n});\r\n\r\nprevBtn.addEventListener('click', () => {\r\n  let index = currentStep - 1;\r\n  numbers[index].classList.remove('active');\r\n  numbers[--index].classList.add('active');\r\n  currentStep = currentStep - 1;\r\n  // console.log(currentStep);\r\n  if (genreSelect.value !== 'Choose genre') {\r\n    gallery.innerHTML='';\r\n    fetchMoviesByGenre(currentStep);\r\n  } \r\n  else if (searchInput.value.length !== 0 ){\r\n    gallery.innerHTML='';\r\n    searchMovies(query , currentStep)\r\n      } else {\r\n    gallery.innerHTML='';\r\n    fetchMovies(currentStep);\r\n  }\r\n  updateBtnBehaviour();\r\n  disappearingBtns();\r\n});\r\n\r\nnextBtn.addEventListener('click', () => {\r\n  let index = currentStep - 1;\r\n  numbers[index].classList.remove('active');\r\n  numbers[++index].classList.add('active');\r\n  currentStep = currentStep + 1;\r\n  // console.log(currentStep);\r\n  if (genreSelect.value !== 'Choose genre') {\r\n    gallery.innerHTML='';\r\n    fetchMoviesByGenre(currentStep);\r\n  } \r\n  else if (searchInput.value.length !== 0 ){\r\n    gallery.innerHTML='';\r\n    searchMovies(query , currentStep)\r\n      } else {\r\n    gallery.innerHTML='';\r\n    fetchMovies(currentStep);\r\n  }\r\n  disappearingBtns();\r\n  updateBtnBehaviour();\r\n});\r\n\r\nfunction disappearingBtns() {\r\n  let condition;\r\n  let rest;\r\n\r\n  numbers.forEach(element => {\r\n    element.classList.remove('invisible');\r\n  });\r\n\r\n  if (currentStep >= numbers.length / 2) {\r\n    condition = numbers.length - (currentStep + 3);\r\n    rest = currentStep - 3 - 1;\r\n\r\n    if (condition >= 0) {\r\n      for (let i = 0; i < condition; i++) {\r\n        numbers[currentStep + 2 + i].classList.add('invisible');\r\n      }\r\n    }\r\n\r\n    if (rest >= 0) {\r\n      for (let i = 0; i < rest; i++) {\r\n        numbers[currentStep - 4 - i].classList.add('invisible');\r\n      }\r\n    }\r\n  } else {\r\n    condition = currentStep - 3 - 1;\r\n    rest = numbers.length - (currentStep + 3);\r\n\r\n    if (condition >= 0) {\r\n      for (let i = 0; i < condition; i++) {\r\n        numbers[currentStep - 4 - i].classList.add('invisible');\r\n      }\r\n    }\r\n\r\n    if (rest >= 0) {\r\n      for (let i = 0; i < rest; i++) {\r\n        numbers[currentStep + 2 + i].classList.add('invisible');\r\n      }\r\n    }\r\n  }\r\n}\r\ndisappearingBtns();\r\n// 1 ... 34567 ... 9 (5)\r\n// 12345 ... 9 (1,2,3,4)\r\n// 1 ... 56789 (6,7,8,9)\r\n"],"names":["$aab16197212dc73e$var$searchForm","document","getElementById","$aab16197212dc73e$var$searchInput","querySelector","$aab16197212dc73e$var$gallery","$aab16197212dc73e$var$loader","$aab16197212dc73e$var$notitle","$aab16197212dc73e$var$API_KEY","$aab16197212dc73e$var$genreMap","async","$aab16197212dc73e$export$b0c4d3ac9887d994","query","page","perPage","innerHTML","$aab16197212dc73e$export$56525cbb1fcd885c","response","fetch","movies","json","results","slice","$aab16197212dc73e$export$5cee2c2772922923","markup","map","movie","id","poster_path","title","release_date","genre_ids","length","posterUrl","productionYear","Date","getFullYear","genreId","join","insertAdjacentHTML","$aab16197212dc73e$export$30b0ee8bdb5cac31","$aab16197212dc73e$export$7d17a3ac1355122c","$aab16197212dc73e$export$afebd51aa95050a7","error","console","log","toString","style","display","innerText","addEventListener","e","preventDefault","value","genres","genre","name","$aab16197212dc73e$export$e95d448b93b2cdb","$9d6cd42a4b230b34$var$API_KEY","$9d6cd42a4b230b34$var$gallery","$9d6cd42a4b230b34$export$88181abcadffafee","pageNum","data","$9d6cd42a4b230b34$var$fetchGenre","sort","firstMovie","secondMovie","popularity","year","filter","includes","$9d6cd42a4b230b34$var$moviesGallery","$9d6cd42a4b230b34$var$btnUp","$9d6cd42a4b230b34$var$scrollToTop","window","scrollTo","top","behavior","onscroll","documentElement","scrollTop","$9d6cd42a4b230b34$var$scrollFunction","$c125a08da72f7f81$var$gallery","$c125a08da72f7f81$var$genreSelect","$c125a08da72f7f81$var$API_KEY","$c125a08da72f7f81$var$genre","$c125a08da72f7f81$export$e4bb840dce7a48f9","number","Action","Adventure","Animation","Comedy","Crime","Documentary","Drama","Family","Fantasy","History","Horror","Music","Mystery","Romance","Thriller","War","Western","$c125a08da72f7f81$var$fetchGenre","movieGenres","$c125a08da72f7f81$var$moviesGallery","event","target","$baa48fd5a30d32e8$var$searchInput","$baa48fd5a30d32e8$var$query","$baa48fd5a30d32e8$var$gallery","$baa48fd5a30d32e8$var$genreSelect","$baa48fd5a30d32e8$var$prevBtn","$baa48fd5a30d32e8$var$nextBtn","$baa48fd5a30d32e8$var$numbers","querySelectorAll","$baa48fd5a30d32e8$var$currentStep","$baa48fd5a30d32e8$var$updateBtnBehaviour","disabled","$baa48fd5a30d32e8$var$disappearingBtns","condition","rest","forEach","element","classList","remove","i","add","numIndex","index"],"version":3,"file":"index.8c8f8e74.js.map"}