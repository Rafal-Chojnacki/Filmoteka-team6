{"mappings":"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","sources":["src/js/header.js","src/js/moviesGallery.js","src/js/switchDayNight.js","src/js/details.js","src/js/footer.js","src/js/choose.js"],"sourcesContent":["const searchForm = document.getElementById('search-form');\nconst searchInput = document.querySelector('.input');\nconst gallery = document.getElementById('gallery');\nconst loader = document.getElementById('loader');\nconst notitle = document.querySelector('.notitle');\nconst API_KEY = 'e7c806d7ce9bbdf1ef93bebcabbfe0f1';\nlet genreMap = {};\n\n\nhideLoader();\n\nasync function fetchGenres() {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`);\n    const data = await response.json();\n    const genres = data.genres;\n\n    for (const genre of genres) {\n      genreMap[genre.id] = genre.name;\n    }\n  } catch (error) {\n    console.log(error.toString());\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    showLoader(); \n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    const data = await response.json();\n    const movies = data.results;\n    hideLoader(); \n    renderGallery(movies);\n\n    if (movies.length === 0) {\n      hideLoader();\n      showNoTitleMessage();\n      gallery.innerHTML ='<p class=\"myfriend\"></p>'\n    } else {\n      hideNoTitleMessage();\n    }\n  } catch (error) {\n    console.log(error.toString());\n    hideLoader(); \n    showNoTitleMessage();\n  }\n}\n\n\n\nfunction renderGallery(movies) {\n  gallery.innerHTML = '';\nconst markup = movies.map(movie =>{ \n  const { id, poster_path, title, release_date, genre_ids } = movie;\n\n  if (!release_date || !poster_path || genre_ids.length === 0) {\n    return ''; \n  }\n\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const productionYear = new Date(release_date).getFullYear();\n  const genresFormatted = genre_ids\n  .map(genreId => genreMap[genreId])\n  .slice(0, 2)\n  .join(', ');\n\n  return `\n  <a class=\"gallery__link\">\n  <div class=\"gallery__item\" id=\"${id}\">\n    <img class=\"gallery__item-img\" src=\"${posterUrl}\" loading=\"lazy\" />\n    <h4 class=\"gallery__item-header\">${title}</h4>\n    <span class=\"gallery__item-info\">${genresFormatted}</span>\n    <span class=\"gallery__item-info\">${productionYear}</span>\n  </div>\n</a>\n  `;\n}).join(\"\")\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction showLoader() {\n  loader.style.display = 'flex';\n}\n\nfunction hideLoader() {\n  loader.style.display = 'none';\n}\n\nfunction showNoTitleMessage() {\n  notitle.innerText = 'Search result not successful. Enter the correct movie name.';\n  notitle.style.display = 'block';\n}\n\nfunction hideNoTitleMessage() {\n  notitle.style.display = 'none';\n}\n\nsearchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const query = searchInput.value;\n  searchMovies(query);\n  searchInput.value = '';\n});\n\n  fetchGenres();\n\n\nexport {showNoTitleMessage};\nexport {showLoader};\nexport {hideLoader};\nexport {fetchGenres};\nexport {renderGallery};\nexport {hideNoTitleMessage};","'use strict';\nconst API_KEY = 'e7c806d7ce9bbdf1ef93bebcabbfe0f1';\nconst gallery = document.querySelector('.gallery');\nfunction moviesGallery(movies, genres) {\n  gallery.innerHTML = '';\n  const markup = movies\n    .sort((firstMovie, secondMovie) => secondMovie.popularity - firstMovie.popularity)\n    .map(movie => {\n      const { poster_path, id, title, release_date, genre_ids } = movie;\n      const year = new Date(release_date).getFullYear();\n      const movieGenres = genres\n        .filter(genre => genre_ids.includes(genre.id))\n        .map(genre => genre.name)\n        .join(', ');\n      return `\n <a class=\"gallery__link\">\n <div class=\"gallery__item\" id=\"${id}\">\n <img class=\"gallery__item-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"/>\n <h4 class=\"gallery__item-header\">${title}</h4>\n <span class=\"gallery__item-info\">${movieGenres}</span>\n <span class=\"gallery__item-info\">${year}</span>\n </div>\n </a>\n `;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('afterbegin', markup);\n}\nexport async function fetchMovies(pageNum) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&page=${pageNum}`,\n    );\n    const data = await response.json();\n    const genres = await fetchGenre();\n    moviesGallery(data.results, genres);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nfetchMovies();\nasync function fetchGenre() {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`,\n    );\n    const data = await response.json();\n    const genres = data.genres;\n    return genres;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst btnUp = document.querySelector('.btnUp');\nbtnUp.style.display = 'none';\nwindow.onscroll = function () {\n  scrollFunction();\n};\nfunction scrollFunction() {\n  if (document.documentElement.scrollTop > 200) {\n    btnUp.style.display = 'block';\n  } else {\n    btnUp.style.display = 'none';\n  }\n  btnUp.addEventListener('click', scrollToTop);\n}\nfunction scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n","// import { hideLoader } from \"./header\";\n\nconst icon = document.querySelector('.toggle-icon-sun');\nconst switchDayNight = document.querySelector('.day-night-switch');\n\n\nif (localStorage.getItem('darkMode')===null){\n    localStorage.setItem('darkMode', \"false\");\n}\n\ncheckDarkModeStatus();\n\nfunction checkDarkModeStatus(){\n    if (localStorage.getItem(\"darkMode\")==='true'){\n        addDarkTheme();\n        switchDayNight.checked = true;\n    }else{\n        removeDarkTheme();\n        switchDayNight.checked = false;\n    }\n}\n\n\n\nswitchDayNight.addEventListener('change', ()=>{\nif(switchDayNight.checked){\naddDarkTheme()\n    \n}else{\nremoveDarkTheme()\n}\n  localStorage.setItem(\"darkMode\",switchDayNight.checked);\n})\n\nfunction addDarkTheme(){\n    document.body.classList.add('dark__theme');\n    \n\n    icon.classList.remove('toggle-icon-sun')\n    icon.classList.add('toggle-icon-moon');\n\n   \n}\n\n\nfunction removeDarkTheme(){\n    document.body.classList.remove('dark__theme');\n   \n\n    icon.classList.remove('toggle-icon-moon' );\n    icon.classList.add('toggle-icon-sun');\n\n  \n}","const API_KEY = 'e7c806d7ce9bbdf1ef93bebcabbfe0f1';\nconst modalBackdrop = document.querySelector('.backdrop');\nconst btnClose = document.querySelector('.modal__btnClose');\nconst btnWatched = document.querySelector('.modal__btnWatched');\nconst btnQueued = document.querySelector('.modal__btnQueue');\nconst modalImg = document.querySelector('.modal__moviePoster');\nconst modalTitle = document.querySelector('.modal__title');\nconst modalAbout = document.querySelector('.modal__about');\nconst modalGenre = document.querySelector('.modal__genre');\nconst modalVotes = document.querySelector('.modal__votes');\nconst modalPopularity = document.querySelector('.modal__popularity');\nconst modalOrgTitle = document.querySelector('.modal__originalTitle');\n\nlet movieId;\n\nfunction detailsHandler(clickedMovie) {\n  //console.log(clickedMovie.target);\n\n  if (clickedMovie.target.matches('img')) {\n    movieId = clickedMovie.target.parentNode.id;\n    //console.log(movieId);\n    fetchId(movieId).then(movieData => {\n      modalImg.setAttribute('src', `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`);\n      modalTitle.textContent = movieData.title;\n      modalVotes.textContent = `${movieData.vote_average}/ ${movieData.vote_count}`;\n      modalPopularity.textContent = movieData.popularity;\n      modalOrgTitle.textContent = movieData.original_title;\n      modalAbout.textContent = movieData.overview;\n      modalGenre.textContent = movieData.genres[0].name;\n      //console.log(movieData);\n    });\n    toggleModal();\n  } else return;\n}\n\nasync function fetchId(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`,\n    );\n    const Data = await response.json();\n    return Data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction toggleModal() {\n  modalBackdrop.classList.toggle('is-hidden');\n}\nfunction EscapeCloseModal(e) {\n  if (e.keyCode === 27 && !modalBackdrop.classList.contains('is-hidden')) toggleModal();\n}\nfunction clickOffModal(e) {\n  if (e.target === modalBackdrop) toggleModal();\n}\n\nfunction saveToWatched() {\n  let tempArray = [];\n  if (localStorage.getItem('watched-films')) {\n    tempArray = JSON.parse(localStorage.getItem('watched-films'));\n  }\n  fetchId(movieId).then(data => {\n    for (let i = 0; i < tempArray.length; i++) {\n      if (tempArray[i].id === data.id) {\n        alert('Movie is already in library');\n        return;\n      }\n    }\n    tempArray.push(data);\n    localStorage.setItem('watched-films', JSON.stringify(tempArray));\n  });\n}\n\nfunction saveToQueue() {\n  let tempArray = [];\n  if (localStorage.getItem('queued-films')) {\n    tempArray = JSON.parse(localStorage.getItem('queued-films'));\n  }\n  fetchId(movieId).then(data => {\n    for (let i = 0; i < tempArray.length; i++) {\n      if (tempArray[i].id === data.id) {\n        alert('Movie is already in library');\n        return;\n      }\n    }\n    tempArray.push(data);\n    localStorage.setItem('queued-films', JSON.stringify(tempArray));\n  });\n}\n\ngallery.addEventListener('click', detailsHandler);\nbtnClose.addEventListener('click', toggleModal);\nbtnWatched.addEventListener('click', saveToWatched);\nbtnQueued.addEventListener('click', saveToQueue);\ndocument.addEventListener('keydown', EscapeCloseModal);\nmodalBackdrop.addEventListener('click', clickOffModal);\n","const modal = document.querySelector('.modal-footer');\nconst closeButton = document.querySelector('.close-footer');\n\nconst openModalElement = document.querySelector('.open-modal');\nconst closeModalElement = document.querySelector('.close-modal');\n\n// Obsługa otwierania modala\nopenModalElement.addEventListener('click', () => {\n  modal.style.display = 'block';\n});\n\n// Obsługa zamykania modala\ncloseModalElement.addEventListener('click', () => {\n  modal.style.display = 'none';\n});\n","import { showLoader } from \"./header\";\nimport { hideLoader } from \"./header\";\nimport { hideNoTitleMessage } from \"./header\";\nasync function fetchGenre() {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`,\n    );\n    const data = await response.json();\n    const genres = data.genres;\n    return genres;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nconst gallery = document.querySelector('.gallery');\n\nconst genreSelect = document.querySelector('.genre');\n\nconst API_KEY = '6fc014c055bacb8460b83603c43b9093'\n\nlet selectedGenre = '';\n\ngenreSelect.addEventListener('change', handleGenreChange);\n\nfunction handleGenreChange(event) {\n  gallery.innerHTML='';\nhideNoTitleMessage();\nselectedGenre = event.target.value;\nfetchMoviesByGenre(selectedGenre);\n// console.log(selectedGenre);\n}\n\nasync function fetchMoviesByGenre(genre) {\n  try {\n    showLoader();\n    const genreId = getGenreId(genre);\n    const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`);\n    const data = await response.json();\n    const genres = await fetchGenre();\n    moviesGallery(data.results, genres);\n    hideLoader()\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction getGenreId(genre) {\n  const genreMap = {\n    Action: 28,\n    Adventure: 12,\n    Animation: 16,\n    Comedy: 35,\n    Crime: 80,\n    Documentary: 99,\n    Drama: 18,\n    Family: 10751,\n    Fantasy: 14,\n    History: 36,\n    Horror: 27,\n    Music: 10402,\n    Mystery: 9648,\n    Romance: 10749,\n    'Science Fiction': 878,\n    'TV Movie': 10770,\n    Thriller: 53,\n    War: 10752,\n    Western: 37\n  };\n  return genreMap[genre];\n}\n\nlet currentPage = 1;\nconst moviesPerPage = 20;\n\nfunction moviesGallery(movies, genres) {\n\n  const markup = movies\n  .sort((firstMovie, secondMovie) => secondMovie.popularity - firstMovie.popularity)\n  .map(movie => {\n    const { poster_path, id, title, release_date, genre_ids } = movie;\n    const year = new Date(release_date).getFullYear();\n\n    const movieGenres = genres\n      .filter(genre => genre_ids.includes(genre.id))\n      .map(genre => genre.name)\n      .join(', ');\n\n    return `\n        <a class=\"gallery__link\">\n          <div class=\"gallery__item\" id=\"${id}\">\n            <img class=\"gallery__item-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"/>\n            <h4 class=\"gallery__item-header\">${title}</h4>\n            <span class=\"gallery__item-info\">${movieGenres}</span>\n            \n            <span class=\"gallery__item-info\">${year}</span>\n            \n          </div>\n        </a>\n      `;\n  })\n  .join('');\n\ngallery.insertAdjacentHTML('afterbegin', markup);\n\n\n}\n\n"],"names":["$aab16197212dc73e$var$searchForm","document","getElementById","$aab16197212dc73e$var$searchInput","querySelector","$aab16197212dc73e$var$gallery","$aab16197212dc73e$var$loader","$aab16197212dc73e$var$notitle","$aab16197212dc73e$var$API_KEY","$aab16197212dc73e$var$genreMap","async","$aab16197212dc73e$var$searchMovies","query","$aab16197212dc73e$export$56525cbb1fcd885c","response","fetch","movies","json","results","$aab16197212dc73e$export$5cee2c2772922923","innerHTML","markup","map","movie","id","poster_path","title","release_date","genre_ids","length","posterUrl","productionYear","Date","getFullYear","genreId","slice","join","insertAdjacentHTML","$aab16197212dc73e$export$30b0ee8bdb5cac31","$aab16197212dc73e$export$7d17a3ac1355122c","$aab16197212dc73e$export$afebd51aa95050a7","error","console","log","toString","style","display","innerText","addEventListener","e","preventDefault","value","genres","genre","name","$aab16197212dc73e$export$e95d448b93b2cdb","$9d6cd42a4b230b34$var$API_KEY","$9d6cd42a4b230b34$var$gallery","pageNum","data","$9d6cd42a4b230b34$var$fetchGenre","sort","firstMovie","secondMovie","popularity","year","filter","includes","$9d6cd42a4b230b34$var$moviesGallery","$9d6cd42a4b230b34$export$88181abcadffafee","$9d6cd42a4b230b34$var$btnUp","$9d6cd42a4b230b34$var$scrollToTop","window","scrollTo","top","behavior","onscroll","documentElement","scrollTop","$9d6cd42a4b230b34$var$scrollFunction","$18a345b65de8f7ec$var$icon","$18a345b65de8f7ec$var$switchDayNight","$18a345b65de8f7ec$var$addDarkTheme","body","classList","add","remove","$18a345b65de8f7ec$var$removeDarkTheme","localStorage","getItem","setItem","checked","$9ec85ec673672488$var$modalBackdrop","$9ec85ec673672488$var$btnClose","$9ec85ec673672488$var$btnWatched","$9ec85ec673672488$var$btnQueued","$9ec85ec673672488$var$modalImg","$9ec85ec673672488$var$modalTitle","$9ec85ec673672488$var$modalAbout","$9ec85ec673672488$var$modalGenre","$9ec85ec673672488$var$modalVotes","$9ec85ec673672488$var$modalPopularity","$9ec85ec673672488$var$modalOrgTitle","$9ec85ec673672488$var$movieId","$9ec85ec673672488$var$fetchId","movieId","$9ec85ec673672488$var$toggleModal","toggle","gallery","clickedMovie","target","matches","parentNode","then","movieData","setAttribute","textContent","vote_average","vote_count","original_title","overview","tempArray","JSON","parse","i","alert","push","stringify","keyCode","contains","$c687303ce0c554e9$var$modal","$c687303ce0c554e9$var$openModalElement","$c687303ce0c554e9$var$closeModalElement","$c125a08da72f7f81$var$gallery","$c125a08da72f7f81$var$genreSelect","$c125a08da72f7f81$var$API_KEY","$c125a08da72f7f81$var$selectedGenre","event","Action","Adventure","Animation","Comedy","Crime","Documentary","Drama","Family","Fantasy","History","Horror","Music","Mystery","Romance","Thriller","War","Western","$c125a08da72f7f81$var$getGenreId","$c125a08da72f7f81$var$fetchGenre","movieGenres","$c125a08da72f7f81$var$moviesGallery","$c125a08da72f7f81$var$fetchMoviesByGenre"],"version":3,"file":"index.132eed7c.js.map"}